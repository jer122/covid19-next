server:
  port: 8080

spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${client-id}
            client-secret: ${client-secret}
            scope: profile, email
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            client-name: google
          kakao:
            client-id: ${client-id}
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image, account_email
            client-name: kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  datasource:
    url: jdbc:h2:tcp://localhost/~/corona #4칸
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: update #띄어쓰기 6칸
    properties:
      hibernate:
        # show_sql: true #띄어쓰기 8칸
        format_sql: true #띄어쓰기 8칸
    redis:
      host: ${host}
      port: ${port}
      lettuce:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 2
      password: ${password}
    #
  #  data:
  #    rest:
  #      base-path: /api


logging.level: #띄어쓰기 없음
  org.hibernate.SQL: debug #띄어쓰기 2칸
  org.hibernate.type: trace

  jwt:
    secret: ${jwt.secret}


  app:
    oauth2:
      authorizedRedirectUris:
        - http://localhost:3000/oauth2/redirect